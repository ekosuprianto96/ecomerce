{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\n// Register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\nvar isLocalhost = function () {\n  return Boolean(window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));\n};\nvar waitWindowLoad;\n// https://github.com/yyx990803/register-service-worker/pull/33#discussion_r394181861\nif (typeof window !== 'undefined') {\n  // Typically, a browser that supports `serviceWorker` should also have supported\n  // `Promise`. But as this package can be used in environments without service\n  // worker support (in that case it would do nothing), there's a chance that\n  // `Promise` does not exist. So we must check for its existence first.\n  if (typeof Promise !== 'undefined') {\n    waitWindowLoad = new Promise(function (resolve) {\n      return window.addEventListener('load', resolve);\n    });\n  } else {\n    waitWindowLoad = {\n      then: function (cb) {\n        return window.addEventListener('load', cb);\n      }\n    };\n  }\n}\nexport function register(swUrl, hooks) {\n  if (hooks === void 0) hooks = {};\n  var registrationOptions = hooks.registrationOptions;\n  if (registrationOptions === void 0) registrationOptions = {};\n  delete hooks.registrationOptions;\n  var emit = function (hook) {\n    var args = [],\n      len = arguments.length - 1;\n    while (len-- > 0) args[len] = arguments[len + 1];\n    if (hooks && hooks[hook]) {\n      hooks[hook].apply(hooks, args);\n    }\n  };\n  if ('serviceWorker' in navigator) {\n    waitWindowLoad.then(function () {\n      if (isLocalhost()) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, emit, registrationOptions);\n        navigator.serviceWorker.ready.then(function (registration) {\n          emit('ready', registration);\n        }).catch(function (error) {\n          return handleError(emit, error);\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, emit, registrationOptions);\n        navigator.serviceWorker.ready.then(function (registration) {\n          emit('ready', registration);\n        }).catch(function (error) {\n          return handleError(emit, error);\n        });\n      }\n    });\n  }\n}\nfunction handleError(emit, error) {\n  if (!navigator.onLine) {\n    emit('offline');\n  }\n  emit('error', error);\n}\nfunction registerValidSW(swUrl, emit, registrationOptions) {\n  navigator.serviceWorker.register(swUrl, registrationOptions).then(function (registration) {\n    emit('registered', registration);\n    if (registration.waiting) {\n      emit('updated', registration);\n      return;\n    }\n    registration.onupdatefound = function () {\n      emit('updatefound', registration);\n      var installingWorker = registration.installing;\n      installingWorker.onstatechange = function () {\n        if (installingWorker.state === 'installed') {\n          if (navigator.serviceWorker.controller) {\n            // At this point, the old content will have been purged and\n            // the fresh content will have been added to the cache.\n            // It's the perfect time to display a \"New content is\n            // available; please refresh.\" message in your web app.\n            emit('updated', registration);\n          } else {\n            // At this point, everything has been precached.\n            // It's the perfect time to display a\n            // \"Content is cached for offline use.\" message.\n            emit('cached', registration);\n          }\n        }\n      };\n    };\n  }).catch(function (error) {\n    return handleError(emit, error);\n  });\n}\nfunction checkValidServiceWorker(swUrl, emit, registrationOptions) {\n  // Check if the service worker can be found.\n  fetch(swUrl).then(function (response) {\n    // Ensure service worker exists, and that we really are getting a JS file.\n    if (response.status === 404) {\n      // No service worker found.\n      emit('error', new Error(\"Service worker not found at \" + swUrl));\n      unregister();\n    } else if (response.headers.get('content-type').indexOf('javascript') === -1) {\n      emit('error', new Error(\"Expected \" + swUrl + \" to have javascript content-type, \" + \"but received \" + response.headers.get('content-type')));\n      unregister();\n    } else {\n      // Service worker found. Proceed as normal.\n      registerValidSW(swUrl, emit, registrationOptions);\n    }\n  }).catch(function (error) {\n    return handleError(emit, error);\n  });\n}\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(function (registration) {\n      registration.unregister();\n    }).catch(function (error) {\n      return handleError(emit, error);\n    });\n  }\n}","map":{"version":3,"names":["isLocalhost","Boolean","window","location","hostname","match","waitWindowLoad","Promise","resolve","addEventListener","then","cb","register","swUrl","hooks","registrationOptions","emit","hook","args","len","arguments","length","apply","navigator","checkValidServiceWorker","serviceWorker","ready","registration","catch","error","handleError","registerValidSW","onLine","waiting","onupdatefound","installingWorker","installing","onstatechange","state","controller","fetch","response","status","Error","unregister","headers","get","indexOf"],"sources":["D:/MyProject/e-comerce/e_comerce2/toko_ku/ecomerce/node_modules/register-service-worker/index.js"],"sourcesContent":["// Register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\nvar isLocalhost = function () { return Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n); }\n\nvar waitWindowLoad\n// https://github.com/yyx990803/register-service-worker/pull/33#discussion_r394181861\nif (typeof window !== 'undefined') {\n  // Typically, a browser that supports `serviceWorker` should also have supported\n  // `Promise`. But as this package can be used in environments without service\n  // worker support (in that case it would do nothing), there's a chance that\n  // `Promise` does not exist. So we must check for its existence first.\n  if (typeof Promise !== 'undefined') {\n    waitWindowLoad = new Promise(function (resolve) { return window.addEventListener('load', resolve); })\n  } else {\n    waitWindowLoad = { then: function (cb) { return window.addEventListener('load', cb); } }\n  }\n}\n\nexport function register (swUrl, hooks) {\n  if ( hooks === void 0 ) hooks = {};\n\n  var registrationOptions = hooks.registrationOptions; if ( registrationOptions === void 0 ) registrationOptions = {};\n  delete hooks.registrationOptions\n\n  var emit = function (hook) {\n    var args = [], len = arguments.length - 1;\n    while ( len-- > 0 ) args[ len ] = arguments[ len + 1 ];\n\n    if (hooks && hooks[hook]) {\n      hooks[hook].apply(hooks, args)\n    }\n  }\n\n  if ('serviceWorker' in navigator) {\n    waitWindowLoad.then(function () {\n      if (isLocalhost()) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, emit, registrationOptions)\n        navigator.serviceWorker.ready.then(function (registration) {\n          emit('ready', registration)\n        }).catch(function (error) { return handleError(emit, error); })\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, emit, registrationOptions)\n        navigator.serviceWorker.ready.then(function (registration) {\n          emit('ready', registration)\n        }).catch(function (error) { return handleError(emit, error); })\n      }\n    })\n  }\n}\n\nfunction handleError (emit, error) {\n  if (!navigator.onLine) {\n    emit('offline')\n  }\n  emit('error', error)\n}\n\nfunction registerValidSW (swUrl, emit, registrationOptions) {\n  navigator.serviceWorker\n    .register(swUrl, registrationOptions)\n    .then(function (registration) {\n      emit('registered', registration)\n      if (registration.waiting) {\n        emit('updated', registration)\n        return\n      }\n      registration.onupdatefound = function () {\n        emit('updatefound', registration)\n        var installingWorker = registration.installing\n        installingWorker.onstatechange = function () {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              emit('updated', registration)\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              emit('cached', registration)\n            }\n          }\n        }\n      }\n    })\n    .catch(function (error) { return handleError(emit, error); })\n}\n\nfunction checkValidServiceWorker (swUrl, emit, registrationOptions) {\n  // Check if the service worker can be found.\n  fetch(swUrl)\n    .then(function (response) {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (response.status === 404) {\n        // No service worker found.\n        emit('error', new Error((\"Service worker not found at \" + swUrl)))\n        unregister()\n      } else if (response.headers.get('content-type').indexOf('javascript') === -1) {\n        emit('error', new Error(\n          \"Expected \" + swUrl + \" to have javascript content-type, \" +\n          \"but received \" + (response.headers.get('content-type'))))\n        unregister()\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, emit, registrationOptions)\n      }\n    })\n    .catch(function (error) { return handleError(emit, error); })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(function (registration) {\n      registration.unregister()\n    }).catch(function (error) { return handleError(emit, error); })\n  }\n}\n"],"mappings":";AAAA;;AAEA;AACA;AACA;AACA;;AAEA,IAAIA,WAAW,GAAG,SAAAA,CAAA,EAAY;EAAE,OAAOC,OAAO,CAC5CC,MAAM,CAACC,QAAQ,CAACC,QAAQ,KAAK,WAAW;EACtC;EACAF,MAAM,CAACC,QAAQ,CAACC,QAAQ,KAAK,OAAO;EACpC;EACAF,MAAM,CAACC,QAAQ,CAACC,QAAQ,CAACC,KAAK,CAC5B,wDACF,CACJ,CAAC;AAAE,CAAC;AAEJ,IAAIC,cAAc;AAClB;AACA,IAAI,OAAOJ,MAAM,KAAK,WAAW,EAAE;EACjC;EACA;EACA;EACA;EACA,IAAI,OAAOK,OAAO,KAAK,WAAW,EAAE;IAClCD,cAAc,GAAG,IAAIC,OAAO,CAAC,UAAUC,OAAO,EAAE;MAAE,OAAON,MAAM,CAACO,gBAAgB,CAAC,MAAM,EAAED,OAAO,CAAC;IAAE,CAAC,CAAC;EACvG,CAAC,MAAM;IACLF,cAAc,GAAG;MAAEI,IAAI,EAAE,SAAAA,CAAUC,EAAE,EAAE;QAAE,OAAOT,MAAM,CAACO,gBAAgB,CAAC,MAAM,EAAEE,EAAE,CAAC;MAAE;IAAE,CAAC;EAC1F;AACF;AAEA,OAAO,SAASC,QAAQA,CAAEC,KAAK,EAAEC,KAAK,EAAE;EACtC,IAAKA,KAAK,KAAK,KAAK,CAAC,EAAGA,KAAK,GAAG,CAAC,CAAC;EAElC,IAAIC,mBAAmB,GAAGD,KAAK,CAACC,mBAAmB;EAAE,IAAKA,mBAAmB,KAAK,KAAK,CAAC,EAAGA,mBAAmB,GAAG,CAAC,CAAC;EACnH,OAAOD,KAAK,CAACC,mBAAmB;EAEhC,IAAIC,IAAI,GAAG,SAAAA,CAAUC,IAAI,EAAE;IACzB,IAAIC,IAAI,GAAG,EAAE;MAAEC,GAAG,GAAGC,SAAS,CAACC,MAAM,GAAG,CAAC;IACzC,OAAQF,GAAG,EAAE,GAAG,CAAC,EAAGD,IAAI,CAAEC,GAAG,CAAE,GAAGC,SAAS,CAAED,GAAG,GAAG,CAAC,CAAE;IAEtD,IAAIL,KAAK,IAAIA,KAAK,CAACG,IAAI,CAAC,EAAE;MACxBH,KAAK,CAACG,IAAI,CAAC,CAACK,KAAK,CAACR,KAAK,EAAEI,IAAI,CAAC;IAChC;EACF,CAAC;EAED,IAAI,eAAe,IAAIK,SAAS,EAAE;IAChCjB,cAAc,CAACI,IAAI,CAAC,YAAY;MAC9B,IAAIV,WAAW,CAAC,CAAC,EAAE;QACjB;QACAwB,uBAAuB,CAACX,KAAK,EAAEG,IAAI,EAAED,mBAAmB,CAAC;QACzDQ,SAAS,CAACE,aAAa,CAACC,KAAK,CAAChB,IAAI,CAAC,UAAUiB,YAAY,EAAE;UACzDX,IAAI,CAAC,OAAO,EAAEW,YAAY,CAAC;QAC7B,CAAC,CAAC,CAACC,KAAK,CAAC,UAAUC,KAAK,EAAE;UAAE,OAAOC,WAAW,CAACd,IAAI,EAAEa,KAAK,CAAC;QAAE,CAAC,CAAC;MACjE,CAAC,MAAM;QACL;QACAE,eAAe,CAAClB,KAAK,EAAEG,IAAI,EAAED,mBAAmB,CAAC;QACjDQ,SAAS,CAACE,aAAa,CAACC,KAAK,CAAChB,IAAI,CAAC,UAAUiB,YAAY,EAAE;UACzDX,IAAI,CAAC,OAAO,EAAEW,YAAY,CAAC;QAC7B,CAAC,CAAC,CAACC,KAAK,CAAC,UAAUC,KAAK,EAAE;UAAE,OAAOC,WAAW,CAACd,IAAI,EAAEa,KAAK,CAAC;QAAE,CAAC,CAAC;MACjE;IACF,CAAC,CAAC;EACJ;AACF;AAEA,SAASC,WAAWA,CAAEd,IAAI,EAAEa,KAAK,EAAE;EACjC,IAAI,CAACN,SAAS,CAACS,MAAM,EAAE;IACrBhB,IAAI,CAAC,SAAS,CAAC;EACjB;EACAA,IAAI,CAAC,OAAO,EAAEa,KAAK,CAAC;AACtB;AAEA,SAASE,eAAeA,CAAElB,KAAK,EAAEG,IAAI,EAAED,mBAAmB,EAAE;EAC1DQ,SAAS,CAACE,aAAa,CACpBb,QAAQ,CAACC,KAAK,EAAEE,mBAAmB,CAAC,CACpCL,IAAI,CAAC,UAAUiB,YAAY,EAAE;IAC5BX,IAAI,CAAC,YAAY,EAAEW,YAAY,CAAC;IAChC,IAAIA,YAAY,CAACM,OAAO,EAAE;MACxBjB,IAAI,CAAC,SAAS,EAAEW,YAAY,CAAC;MAC7B;IACF;IACAA,YAAY,CAACO,aAAa,GAAG,YAAY;MACvClB,IAAI,CAAC,aAAa,EAAEW,YAAY,CAAC;MACjC,IAAIQ,gBAAgB,GAAGR,YAAY,CAACS,UAAU;MAC9CD,gBAAgB,CAACE,aAAa,GAAG,YAAY;QAC3C,IAAIF,gBAAgB,CAACG,KAAK,KAAK,WAAW,EAAE;UAC1C,IAAIf,SAAS,CAACE,aAAa,CAACc,UAAU,EAAE;YACtC;YACA;YACA;YACA;YACAvB,IAAI,CAAC,SAAS,EAAEW,YAAY,CAAC;UAC/B,CAAC,MAAM;YACL;YACA;YACA;YACAX,IAAI,CAAC,QAAQ,EAAEW,YAAY,CAAC;UAC9B;QACF;MACF,CAAC;IACH,CAAC;EACH,CAAC,CAAC,CACDC,KAAK,CAAC,UAAUC,KAAK,EAAE;IAAE,OAAOC,WAAW,CAACd,IAAI,EAAEa,KAAK,CAAC;EAAE,CAAC,CAAC;AACjE;AAEA,SAASL,uBAAuBA,CAAEX,KAAK,EAAEG,IAAI,EAAED,mBAAmB,EAAE;EAClE;EACAyB,KAAK,CAAC3B,KAAK,CAAC,CACTH,IAAI,CAAC,UAAU+B,QAAQ,EAAE;IACxB;IACA,IAAIA,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;MAC3B;MACA1B,IAAI,CAAC,OAAO,EAAE,IAAI2B,KAAK,CAAE,8BAA8B,GAAG9B,KAAM,CAAC,CAAC;MAClE+B,UAAU,CAAC,CAAC;IACd,CAAC,MAAM,IAAIH,QAAQ,CAACI,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC,CAACC,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,EAAE;MAC5E/B,IAAI,CAAC,OAAO,EAAE,IAAI2B,KAAK,CACrB,WAAW,GAAG9B,KAAK,GAAG,oCAAoC,GAC1D,eAAe,GAAI4B,QAAQ,CAACI,OAAO,CAACC,GAAG,CAAC,cAAc,CAAE,CAAC,CAAC;MAC5DF,UAAU,CAAC,CAAC;IACd,CAAC,MAAM;MACL;MACAb,eAAe,CAAClB,KAAK,EAAEG,IAAI,EAAED,mBAAmB,CAAC;IACnD;EACF,CAAC,CAAC,CACDa,KAAK,CAAC,UAAUC,KAAK,EAAE;IAAE,OAAOC,WAAW,CAACd,IAAI,EAAEa,KAAK,CAAC;EAAE,CAAC,CAAC;AACjE;AAEA,OAAO,SAASe,UAAUA,CAAA,EAAI;EAC5B,IAAI,eAAe,IAAIrB,SAAS,EAAE;IAChCA,SAAS,CAACE,aAAa,CAACC,KAAK,CAAChB,IAAI,CAAC,UAAUiB,YAAY,EAAE;MACzDA,YAAY,CAACiB,UAAU,CAAC,CAAC;IAC3B,CAAC,CAAC,CAAChB,KAAK,CAAC,UAAUC,KAAK,EAAE;MAAE,OAAOC,WAAW,CAACd,IAAI,EAAEa,KAAK,CAAC;IAAE,CAAC,CAAC;EACjE;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}