{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.feedback, feed => {\n    return _openBlock(), _createElementBlock(\"i\", {\n      key: feed,\n      class: _normalizeClass([feed.fill, \"bx bxs-star\"])\n    }, null, 2 /* CLASS */);\n  }), 128 /* KEYED_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementBlock","_Fragment","_renderList","$data","feedback","feed","key","class","_normalizeClass","fill"],"sources":["D:\\MyProject\\e-comerce\\e_comerce2\\toko_ku\\ecomerce\\src\\components\\atom\\StarComponent.vue"],"sourcesContent":["<template>\r\n  <i v-for=\"feed in feedback\" :key=\"feed\" :class=\"feed.fill\" class='bx bxs-star'></i>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'StarComponent',\r\n  props: {\r\n    star: {\r\n      type: Number,\r\n      default: 0\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      feedback: []\r\n    }\r\n  },\r\n  mounted() {\r\n    this.loopStarFeedback(this.star)\r\n  },\r\n  methods: {\r\n    loopStarFeedback(parameter) {\r\n      for(let i = 1; i <= 5; i++) {\r\n        let fill = 'text-slate-500';\r\n          if(i <= parameter) {\r\n            fill = 'text-yellow-500'\r\n          }\r\n         const feedback = {count: i, fill: fill};\r\n          this.feedback.push(feedback);\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"],"mappings":";;2BACEA,mBAAA,CAAmFC,SAAA,QAAAC,WAAA,CAAjEC,KAAA,CAAAC,QAAQ,EAAhBC,IAAI;yBAAdL,mBAAA,CAAmF;MAAtDM,GAAG,EAAED,IAAI;MAAGE,KAAK,EAAAC,eAAA,EAAEH,IAAI,CAACI,IAAI,EAAQ,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}