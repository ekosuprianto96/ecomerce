{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.feedback, feed => {\n    return _openBlock(), _createElementBlock(\"i\", {\n      key: feed,\n      class: _normalizeClass([feed.fill, \"bx bxs-star\"])\n    }, null, 2);\n  }), 128);\n}","map":{"version":3,"names":["_createElementBlock","_Fragment","_renderList","$data","feedback","feed","key","class","_normalizeClass","fill"],"sources":["D:\\MyProject\\e-comerce\\e_comerce2\\toko_ku\\ecomerce\\src\\components\\atom\\StarComponent.vue"],"sourcesContent":["<template>\n  <i\n    v-for=\"feed in feedback\"\n    :key=\"feed\"\n    :class=\"feed.fill\"\n    class=\"bx bxs-star\"\n  ></i>\n</template>\n\n<script>\nexport default {\n  name: \"StarComponent\",\n  props: {\n    star: {\n      type: Number,\n      default: 0,\n    },\n  },\n  data() {\n    return {\n      feedback: [],\n    };\n  },\n  mounted() {\n    this.loopStarFeedback(this.star);\n  },\n  methods: {\n    loopStarFeedback(parameter) {\n      for (let i = 1; i <= 5; i++) {\n        let fill = \"text-slate-500\";\n        if (i <= parameter) {\n          fill = \"text-yellow-500\";\n        }\n        const feedback = { count: i, fill: fill };\n        this.feedback.push(feedback);\n      }\n    },\n  },\n};\n</script>\n\n<style></style>\n"],"mappings":";;2BACEA,mBAAA,CAKKC,SAAA,QAAAC,WAAA,CAJYC,KAAA,CAAAC,QAAQ,EAAhBC,IAAI;yBADbL,mBAAA,CAKK;MAHFM,GAAG,EAAED,IAAI;MACTE,KAAK,EAAAC,eAAA,EAAEH,IAAI,CAACI,IAAI,EACX,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}